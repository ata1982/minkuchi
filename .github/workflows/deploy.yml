name: Deploy Minkuchi to Render

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Run Tests & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          
      - name: Type check
        run: npm run type-check
        
      - name: Lint check
        run: npm run lint
        
      - name: Build test
        run: npm run build:ci
        env:
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          APP_URL: ${{ secrets.NEXTAUTH_URL }}
          NODE_ENV: production

  deploy:
    name: Deploy to Render
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Debug Secrets (安全な確認)
        run: |
          echo "RENDER_DEPLOY_HOOK_URL is set: ${{ secrets.RENDER_DEPLOY_HOOK_URL != '' }}"
          echo "RENDER_SERVICE_ID is set: ${{ secrets.RENDER_SERVICE_ID != '' }}"
          echo "RENDER_API_KEY is set: ${{ secrets.RENDER_API_KEY != '' }}"
          
      - name: Deploy to Render
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          timeout: 60000
          
      - name: Wait for deployment
        run: sleep 45
        
      - name: Check deployment status
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}'
          method: 'GET'
          customHeaders: '{"Authorization": "Bearer ${{ secrets.RENDER_API_KEY }}"}'
          timeout: 30000
          
  verify:
    name: Verify Deployment
    needs: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Health Check
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.HEALTH_CHECK_URL }}
          method: 'GET'
          timeout: 30000
          retry: 3
          retryWait: 10000